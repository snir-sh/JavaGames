
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Random;
import java.util.Timer;

import javax.swing.JPanel;
import javax.swing.RepaintManager;

public class SlidesGUI extends JPanel {
    private SlidesGame game;
    private int width;
    private boolean win;
    private int[][] a;
    private int[][] afterMove;
    
    
    public SlidesGUI()
    {
        game = new SlidesGame(4);
        win = false;
        addKeyListener(new Listener());
        setFocusable(true);
        requestFocus();
        
    }
    
    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        drawBoard(g2d);
        
        if(win)
            gameOver(g2d);
    }
    
    private void drawBoard(Graphics2D g2d)
    {
        int w = getWidth();
        int h = getHeight();
        width = w / (game.SIZE + 2);
        a = game.getBoard();
        int x, y;
        x = y = width;
        
        for(int i = 0; i < a.length; i++, y += width)
        {
            x = width;
            for(int j = 0; j < a.length; j++, x += width)
            	drawSquare(g2d, a[i][j], x, y);
        }
    }
    
    private void drawSquare(Graphics2D g2d, int num, int x, int y)
    {
    	if (num != 0)
    		g2d.setColor(Color.BLUE);
    	else
    		g2d.setColor(Color.GRAY);    	
        g2d.fillRect(x+1, y+1, width-2, width-2);
        g2d.setFont(new Font("arial", Font.BOLD, 20));
        g2d.setColor(Color.WHITE);        
        g2d.drawString("" + num, x + width/2 - 5, y + width/2 + 5);                 
    }
    
    private void gameOver(Graphics2D g2d)
    {
        g2d.setColor(Color.GREEN);
        g2d.drawString("Well Done :)", getWidth() / 2 - 50, 30);
    }
    
    private class Listener extends KeyAdapter
    {
    	public void keyPressed(KeyEvent event)
    	{
    		
    		int key = event.getKeyCode();
    		if (key == event.VK_LEFT)
    		{
			   	for (int i=0; i<game.SIZE; i++) 
			   	{
			   		for (int j=game.SIZE-1; j>0; j--)
			   		{
			   			if (a[i][j-1]==a[i][j])
			   			{
			   				a[i][j-1]=2*a[i][j-1];
			   				a[i][j]=0;
			   			}
			   			if (a[i][j-1]==0)
			   			{
			   				a[i][j-1] = a[i][j];
			   				a[i][j] = 0;
			   			}
			   		}
			   	}
    		}
    		else if (key == event.VK_UP)
    		{
    			for (int i=game.SIZE-1; i>0; i--)
    				for (int j=0; j<game.SIZE; j++)
    				{
			   			if (a[i-1][j]==a[i][j])
			   			{
			   				a[i-1][j]=2*a[i-1][j];
			   				a[i][j]=0;
			   			}
    					if (a[i-1][j]==0)
    					{
    						a[i-1][j]=a[i][j];
    						a[i][j]=0;
    					}
    				}
    		}   		
    		else if (key == event.VK_DOWN)
    		{
	    			for (int i=0; i<game.SIZE-1; i++)
		    				for (int j=0; j<game.SIZE; j++)
		    				{
					   			if (a[i+1][j]==a[i][j])
					   			{
					   				a[i+1][j]=2*a[i+1][j];
					   				a[i][j]=0;
					   			}
		    					if (a[i+1][j]==0)
		    					{
		    						a[i+1][j]=a[i][j];
		    						a[i][j]=0;
		    					}
		    				}
    		}   
    		else if (key == event.VK_RIGHT)
    		{
	    			for (int i=0; i<game.SIZE; i++)
	    				for (int j=0; j<game.SIZE-1; j++)
	    				{
				   			if (a[i][j+1]==a[i][j])
				   			{
				   				a[i][j+1]=2*a[i][j+1];
				   				a[i][j]=0;
				   			}
	    					if (a[i][j+1]==0)
	    					{
	    						a[i][j+1]=a[i][j];
	    						a[i][j]=0;
	    					}
	    				}
    		}   
    		try {
				wait(100);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
    		repaint();
    		
    		    	
    	}
    }
    
    private void copyArray(int[][] from, int[][] to)
    {
    	for (int i=0; i<game.SIZE; i++)
    		for (int j=0; j<game.SIZE; j++)
    			to[i][j] = from[i][j];
    }
    private void randomLocation()
    {
    	int[] location = new int[2];
    	Random rand = new Random();    	
    	location[0] = rand.nextInt(game.SIZE);
    	location[1] = rand.nextInt(game.SIZE);  	
    	
    	while (a[location[0]][location[1]]!=0)
    	{
        	location[0] = rand.nextInt(game.SIZE);
        	location[1] = rand.nextInt(game.SIZE);
    	}
    	
    	a[location[0]][location[1]] = 2;
    }
    
}
